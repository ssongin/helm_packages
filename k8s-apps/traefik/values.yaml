additionalArguments:
  - "--providers.kubernetesingress"
  - "--providers.kubernetescrd"
  - "--ping"
  - "--global.sendAnonymousUsage=false"

service:
  enabled: true
  type: LoadBalancer

global:
  sendAnonymousUsage: false

ports:
  web:
    http:
      redirections:
        entryPoint:
          to: websecure
          scheme: https

# ingressRoute:
#   dashboard:
# enabled: true
# entryPoints: [web, websecure]
# matchRule: Host(`traefik-dashboard.cloud.lan`)

ingressRoute:
  dashboard:
    # -- Create an IngressRoute for the dashboard
    enabled: true
    # -- Additional ingressRoute annotations (e.g. for kubernetes.io/ingress.class)
    annotations:
      cert-manager.io/cluster-issuer: selfsigned-cluster-issuer
      external-dns.alpha.kubernetes.io/hostname: traefik.homelab.net
      external-dns.alpha.kubernetes.io/target: home.homelab.net
      traefik.ingress.kubernetes.io/router.entrypoints: websecure
      gethomepage.dev/enabled: "true"
      gethomepage.dev/name: Traefik
      gethomepage.dev/description: "Traefik Ingress controller dashboard"
      gethomepage.dev/group: Network
      gethomepage.dev/icon: https://raw.githubusercontent.com/traefik/traefik/master/docs/content/assets/img/traefik.logo-dark.png

    # -- Additional ingressRoute labels (e.g. for filtering IngressRoute by custom labels)
    labels: {}
    # -- The router match rule used for the dashboard ingressRoute

    # matchRule: PathPrefix(`/dashboard`) || PathPrefix(`/api`)
    matchRule: Host(`traefik.homelab.net`)
    # -- The internal service used for the dashboard ingressRoute
    services:
      - name: api@internal
        kind: TraefikService
    # -- Specify the allowed entrypoints to use for the dashboard ingress route, (e.g. traefik, web, websecure).
    # By default, it's using traefik entrypoint, which is not exposed.
    # /!\ Do not expose your dashboard without any protection over the internet /!\
    entryPoints: ["traefik"]
    # -- Additional ingressRoute middlewares (e.g. for authentication)
    middlewares: []
    # -- TLS options (e.g. secret containing certificate)
    tls: {}

readinessProbe:
  failureThreshold: 3
  initialDelaySeconds: 10
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 2

livenessProbe:
  failureThreshold: 3
  initialDelaySeconds: 2
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 2
